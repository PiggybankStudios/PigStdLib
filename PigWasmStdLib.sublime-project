{
	"folders":
	[
		{
			"path": ".",
			"folder_exclude_patterns": [
				"musl_libc",
				"lib",
			],
			"file_exclude_patterns": [
				"test/combined.js",
				"build/*.js",
				"build/*.wasm",
			],
		},
		{
			"path": "lib/include/gylib",
			"name": "GyLib",
			"folder_exclude_patterns": [
				"std",
			],
		},
		{
			"path": "musl_libc",
			"name": "Musl Lib-C",
		}
	],
	"settings":
	{
		"build_options":
		[
		],
		"custom_constants":
		[
			"DECIMAL_DIG",
			"EXTERN_C",
			"EXTERN_C_END",
			"EXTERN_C_START",
			"FP_INFINITE",
			"FP_NAN",
			"FP_NORMAL",
			"FP_SUBNORMAL",
			"FP_ZERO",
			"INFINITY",
			"LANGUAGE_C",
			"LANGUAGE_CPP",
			"LDBL_DIG",
			"LDBL_EPSILON",
			"LDBL_MANT_DIG",
			"LDBL_MAX",
			"LDBL_MAX_10_EXP",
			"LDBL_MAX_EXP",
			"LDBL_MIN",
			"LDBL_MIN_10_EXP",
			"LDBL_MIN_EXP",
			"LDBL_TRUE_MIN",
			"NAN",
			"STD_ASSERTIONS_DISABLED",
			"STD_ASSERTIONS_ENABLED",
			"TEST_INCLUDE_STD_LIBRARY",
			"WASM_IMPORTED_FUNC",
			"WASM_MEMORY_MAX_NUM_PAGES",
			"WASM_MEMORY_PAGE_SIZE",
			"_Addr",
			"_Int64",
			"_Reg",
			"__BYTE_ORDER",
			"__LONG_MAX",
		],
		"custom_functions":
		[
			"#define WASM_EXPORTED_FUNC(returnType, functionName, ...)",
			"#define assert(condition)",
			"#define fpclassify(value)",
			"#define isinf(value)",
			"#define isnan(value)",
			"#define isnormal(value)",
			"#define signbit(value)",
			"StdAssertFailure(const char* filePath, int fileLineNum, const char* funcName, const char* conditionStr)",
			"WASM_IMPORTED_FUNC void jsAbort(const char* messageStrPntr)",
			"WASM_IMPORTED_FUNC void jsAssertFailure(const char* filePathPntr, int fileLineNum, const char* funcNamePntr, const char* messageStrPntr)",
			"WASM_IMPORTED_FUNC void jsGrowMemory(unsigned int numPages)",
			"WASM_IMPORTED_FUNC void jsPrintNumber(const char* labelStrPntr, int number)",
			"WASM_IMPORTED_FUNC void jsPrintString(const char* strPntr)",
			"WASM_IMPORTED_FUNC void jsTestFunction()",
			"async function PigWasm_Init(wasmMemory, wasmFilePath)",
			"double acos(double value)",
			"double asin(double value)",
			"double atan(double value)",
			"double atan2(double numer, double denom)",
			"double cbrt(double value)",
			"double ceil(double value)",
			"double copysign(double magnitude, double sign)",
			"double cos(double value)",
			"double fabs(double value)",
			"double floor(double value)",
			"double fmax(double value1, double value2)",
			"double fmin(double value1, double value2)",
			"double fmod(double numer, double denom)",
			"double ldexp(double value, int exponent)",
			"double log(double value)",
			"double log10(double value)",
			"double log2(double value)",
			"double pow(double value, double exponent)",
			"double round(double value)",
			"double scalbn(double value, int power)",
			"double sin(double value)",
			"double sqrt(double value)",
			"double tan(double value)",
			"float  acosf(float value)",
			"float  asinf(float value)",
			"float  atan2f(float numer, float denom)",
			"float  atanf(float value)",
			"float  cbrtf(float value)",
			"float  ceilf(float value)",
			"float  copysignf(float magnitude, float sign)",
			"float  cosf(float value)",
			"float  fabsf(float value)",
			"float  floorf(float value)",
			"float  fmaxf(float value1, float value2)",
			"float  fminf(float value1, float value2)",
			"float  fmodf(float numer, float denom)",
			"float  ldexpf(float value, int exponent)",
			"float  log10f(float value)",
			"float  log2f(float value)",
			"float  logf(float value)",
			"float  powf(float value, float exponent)",
			"float  roundf(float value)",
			"float  scalbnf(float value, int power)",
			"float  sinf(float value)",
			"float  sqrtf(float value)",
			"float  tanf(float value)",
			"function PigWasm_AcquireCanvas(canvasWidth, canvasHeight)",
			"function PigWasm_CreateGlContext(canvas)",
			"function PigWasm_InitMemory(initialMemPageCount)",
			"inline int __flt_rounds()",
			"int __fpclassify(double value)",
			"int __fpclassifyf(float value)",
			"long double copysignl(long double magnitude, long double sign)",
			"long double fabsl(long double value)",
			"long double fmodl(long double numer, long double denom)",
			"long double scalbnl(long double value, int power)",
			"unsigned __FLOAT_BITS(float value)",
			"unsigned long long __DOUBLE_BITS(double value)",
			"void InitWasmMemory(uint32_t numInitialPages)",
			"void free(void* allocPntr)",
			"void* WasmMemoryAllocate(uint32_t numBytes)",
			"void* aligned_alloc(size_t numBytes, size_t alignmentSize)",
			"void* calloc(size_t numElements, size_t elemSize)",
			"void* malloc(size_t numBytes)",
			"void* realloc(void* prevAllocPntr, size_t newSize)",
		],
		"custom_globals":
		[
		],
		"custom_types":
		[
			"double_t",
			"float_t",
			"int16_t",
			"int32_t",
			"int64_t",
			"int8_t",
			"intmax_t",
			"intptr_t",
			"ldshape",
			"ptrdiff_t",
			"size_t",
			"ssize_t",
			"u_int64_t",
			"uint16_t",
			"uint32_t",
			"uint64_t",
			"uint8_t",
			"uintmax_t",
			"uintptr_t",
			"wchar_t",
		],
	},
}
